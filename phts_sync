#!/usr/bin/env python3

from __future__ import (absolute_import, division, print_function,
    unicode_literals)

import os
import sys
import shutil
import re
import argparse

import photosort as ps


def main():
    parser = argparse.ArgumentParser(\
        description="Organize photos and videos by metadata." )
    parser.add_argument( "--indir", required=False, default="",
        help="input directory" )
    parser.add_argument( "--photodir", required=True, default="",
        help="output media directory" )
    parser.add_argument( "--albumdir", required=False, default=None,
        help="create new albums based on input directories and write "
        "to this directory" )
    parser.add_argument( "--reindex", required=False, default=False,
        action="store_true", help="force rebuild of index" )
    parser.add_argument( "--usefiletime", required=False, default=False,
        action="store_true",
        help="if EXIF information is missing, use the file timestamp" )
    args = parser.parse_args()

    indir = os.path.abspath(args.indir)
    photodir = os.path.abspath(args.photodir)

    index = os.path.join(photodir, "photosync.db")

    if not os.path.isdir(photodir):
        os.mkdir(photodir)

    if args.albumdir is not None:
        if ps.is_subdir(args.albumdir, photodir):
            raise RuntimeError(\
                "album directory must not be within the output directory")
        if not os.path.isdir(args.albumdir):
            os.mkdir(args.albumdir)

    brokendir = os.path.join(photodir, "broken")
    if not os.path.isdir(brokendir):
        os.mkdir(brokendir)

    if args.reindex:
        if os.path.isfile(index):
            os.remove(index)

    db = ps.DB(index)

    if args.reindex:
        exclude = []
        for root, dirs, files in os.walk(photodir, topdown=True):
            dirs[:] = [d for d in dirs if d not in exclude]
            ps.index_media(db, root, files, args.usefiletime)

    if args.indir != "":
        for root, dirs, files in os.walk(indir):
            ps.import_media(db, root, files, photodir, args.albumdir,
                args.usefiletime)



if __name__ == "__main__":
    main()
